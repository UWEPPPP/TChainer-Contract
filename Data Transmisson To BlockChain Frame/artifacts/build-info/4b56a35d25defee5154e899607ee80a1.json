{
	"id": "4b56a35d25defee5154e899607ee80a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Data Transmisson To BlockChain Frame/VerifierContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.10 <0.8.11;\n\n/**\n权限控制合约\n**/\ncontract VerifierContract {\n    /**\n    默认用户 0   无权限\n    普通用户 1 基础权限\n    上链用户 2 上链权限\n    管理员   3 所有权限\n    **/\n    enum Role {\n        Default,\n        Common,\n        Chainer,\n        Admin\n    }\n\n    //存储身份\n    mapping(address => uint8) private users;\n\n    //设置管理员\n    constructor(address admin) {\n        users[admin] == 2;\n    }\n\n    /**\n     *@param addr 视图赋予权限者的地址\n     *@param role 赋予的权限等级\n    **/\n    function checkPermission(address addr,Role role) internal view returns (bool) {\n        if (users[addr] != uint8(role)) {\n            return false;\n        }\n        return true;\n    }\n\n    /**设置权限\n     *@param addr 被赋予权限者的地址\n     *@param role 被赋予的权限等级\n     **/\n    function setRole(address addr, uint8 role) public {\n        if (role == uint8(Role.Common)) {\n            users[addr] = uint8(Role.Common);\n        }\n        if (role == uint8(Role.Chainer)) {\n            if (checkPermission(msg.sender,Role.Admin)) {\n                users[addr] = uint8(Role.Chainer);\n            }\n        }\n    }\n    \n    /**删除权限\n     *@param addr 被删除权限者的地址\n    **/\n    function removeRole(address addr) public {\n        if(checkPermission(msg.sender,Role.Admin)){\n            users[addr]=uint8(Role.Default);\n        }\n    }\n    \n    /**查看权限\n    *@param addr 查看权限的地址\n    **/\n    function checkRole(address addr) public view returns (uint8) {\n        return users[addr];\n    }\n    \n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Data Transmisson To BlockChain Frame/VerifierContract.sol": {
				"VerifierContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "checkRole",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "removeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "role",
									"type": "uint8"
								}
							],
							"name": "setRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkRole(address)": {
								"params": {
									"addr": "查看权限的地址*"
								}
							},
							"removeRole(address)": {
								"params": {
									"addr": "被删除权限者的地址*"
								}
							},
							"setRole(address,uint8)": {
								"params": {
									"addr": "被赋予权限者的地址",
									"role": "被赋予的权限等级*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":94:1672  contract VerifierContract {... */\n  mstore(0x40, 0x80)\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":442:503  constructor(address admin) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":495:496  2 */\n  0x02\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":479:484  users */\n  0x00\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":479:491  users[admin] */\n  dup1\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":485:490  admin */\n  dup4\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":479:491  users[admin] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  pop\n  pop\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":479:496  users[admin] == 2 */\n  pop\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":442:503  constructor(address admin) {... */\n  pop\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":94:1672  contract VerifierContract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":94:1672  contract VerifierContract {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":94:1672  contract VerifierContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4762155d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x571c3e60\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa0d7823e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1337:1492  function removeRole(address addr) public {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":922:1253  function setRole(address addr, uint8 role) public {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1569:1665  function checkRole(address addr) public view returns (uint8) {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1337:1492  function removeRole(address addr) public {... */\n    tag_9:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1391:1429  checkPermission(msg.sender,Role.Admin) */\n      tag_20\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1407:1417  msg.sender */\n      caller\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1418:1428  Role.Admin */\n      0x03\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1391:1406  checkPermission */\n      tag_21\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1391:1429  checkPermission(msg.sender,Role.Admin) */\n      jump\t// in\n    tag_20:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1388:1486  if(checkPermission(msg.sender,Role.Admin)){... */\n      iszero\n      tag_22\n      jumpi\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1462:1474  Role.Default */\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1456:1475  uint8(Role.Default) */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n    tag_23:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1444:1449  users */\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1444:1455  users[addr] */\n      dup1\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1450:1454  addr */\n      dup4\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1444:1455  users[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1444:1475  users[addr]=uint8(Role.Default) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1388:1486  if(checkPermission(msg.sender,Role.Admin)){... */\n    tag_22:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1337:1492  function removeRole(address addr) public {... */\n      pop\n      jump\t// out\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":922:1253  function setRole(address addr, uint8 role) public {... */\n    tag_13:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1000:1011  Role.Common */\n      0x01\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":994:1012  uint8(Role.Common) */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      tag_28\n      tag_25\n      jump\t// in\n    tag_28:\n    tag_27:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":986:1012  role == uint8(Role.Common) */\n      0xff\n      and\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":986:990  role */\n      dup2\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":986:1012  role == uint8(Role.Common) */\n      0xff\n      and\n      eq\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":982:1071  if (role == uint8(Role.Common)) {... */\n      iszero\n      tag_29\n      jumpi\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1048:1059  Role.Common */\n      0x01\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1042:1060  uint8(Role.Common) */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_31\n      tag_25\n      jump\t// in\n    tag_31:\n    tag_30:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1028:1033  users */\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1028:1039  users[addr] */\n      dup1\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1034:1038  addr */\n      dup5\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1028:1039  users[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1028:1060  users[addr] = uint8(Role.Common) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":982:1071  if (role == uint8(Role.Common)) {... */\n    tag_29:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1098:1110  Role.Chainer */\n      0x02\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1092:1111  uint8(Role.Chainer) */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_32\n      jumpi\n      tag_33\n      tag_25\n      jump\t// in\n    tag_33:\n    tag_32:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1084:1111  role == uint8(Role.Chainer) */\n      0xff\n      and\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1084:1088  role */\n      dup2\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1084:1111  role == uint8(Role.Chainer) */\n      0xff\n      and\n      eq\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1080:1247  if (role == uint8(Role.Chainer)) {... */\n      iszero\n      tag_34\n      jumpi\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1131:1169  checkPermission(msg.sender,Role.Admin) */\n      tag_35\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1147:1157  msg.sender */\n      caller\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1158:1168  Role.Admin */\n      0x03\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1131:1146  checkPermission */\n      tag_21\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1131:1169  checkPermission(msg.sender,Role.Admin) */\n      jump\t// in\n    tag_35:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1127:1237  if (checkPermission(msg.sender,Role.Admin)) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1209:1221  Role.Chainer */\n      0x02\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1203:1222  uint8(Role.Chainer) */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      tag_38\n      tag_25\n      jump\t// in\n    tag_38:\n    tag_37:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1189:1194  users */\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1189:1200  users[addr] */\n      dup1\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1195:1199  addr */\n      dup5\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1189:1200  users[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1189:1222  users[addr] = uint8(Role.Chainer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1127:1237  if (checkPermission(msg.sender,Role.Admin)) {... */\n    tag_36:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1080:1247  if (role == uint8(Role.Chainer)) {... */\n    tag_34:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":922:1253  function setRole(address addr, uint8 role) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1569:1665  function checkRole(address addr) public view returns (uint8) {... */\n    tag_16:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1623:1628  uint8 */\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1647:1652  users */\n      dup1\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1647:1658  users[addr] */\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1653:1657  addr */\n      dup4\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1647:1658  users[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1640:1658  return users[addr] */\n      swap1\n      pop\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":1569:1665  function checkRole(address addr) public view returns (uint8) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":614:798  function checkPermission(address addr,Role role) internal view returns (bool) {... */\n    tag_21:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":686:690  bool */\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":727:731  role */\n      dup2\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":721:732  uint8(role) */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      tag_42\n      tag_25\n      jump\t// in\n    tag_42:\n    tag_41:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":706:732  users[addr] != uint8(role) */\n      0xff\n      and\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":706:711  users */\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":706:717  users[addr] */\n      dup1\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":712:716  addr */\n      dup6\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":706:717  users[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":706:732  users[addr] != uint8(role) */\n      0xff\n      and\n      eq\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":702:771  if (users[addr] != uint8(role)) {... */\n      tag_43\n      jumpi\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":755:760  false */\n      0x00\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":748:760  return false */\n      swap1\n      pop\n      jump(tag_40)\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":702:771  if (users[addr] != uint8(role)) {... */\n    tag_43:\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":787:791  true */\n      0x01\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":780:791  return true */\n      swap1\n      pop\n        /* \"Data Transmisson To BlockChain Frame/VerifierContract.sol\":614:798  function checkPermission(address addr,Role role) internal view returns (bool) {... */\n    tag_40:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_45:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_47:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_48:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_61\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_47\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_49:\n        /* \"#utility.yul\":641:665   */\n      tag_63\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_48\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_64:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_50:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_66\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_49\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_69\n      tag_45\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":917:1036   */\n    tag_68:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_70\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_50\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1262   */\n    tag_51:\n        /* \"#utility.yul\":1211:1218   */\n      0x00\n        /* \"#utility.yul\":1251:1255   */\n      0xff\n        /* \"#utility.yul\":1244:1249   */\n      dup3\n        /* \"#utility.yul\":1240:1256   */\n      and\n        /* \"#utility.yul\":1229:1256   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1268:1386   */\n    tag_52:\n        /* \"#utility.yul\":1339:1361   */\n      tag_73\n        /* \"#utility.yul\":1355:1360   */\n      dup2\n        /* \"#utility.yul\":1339:1361   */\n      tag_51\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1332:1337   */\n      dup2\n        /* \"#utility.yul\":1329:1362   */\n      eq\n        /* \"#utility.yul\":1319:1380   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1376:1377   */\n      0x00\n        /* \"#utility.yul\":1373:1374   */\n      dup1\n        /* \"#utility.yul\":1366:1378   */\n      revert\n        /* \"#utility.yul\":1319:1380   */\n    tag_74:\n        /* \"#utility.yul\":1268:1386   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1392:1527   */\n    tag_53:\n        /* \"#utility.yul\":1436:1441   */\n      0x00\n        /* \"#utility.yul\":1474:1480   */\n      dup2\n        /* \"#utility.yul\":1461:1481   */\n      calldataload\n        /* \"#utility.yul\":1452:1481   */\n      swap1\n      pop\n        /* \"#utility.yul\":1490:1521   */\n      tag_76\n        /* \"#utility.yul\":1515:1520   */\n      dup2\n        /* \"#utility.yul\":1490:1521   */\n      tag_52\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1392:1527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1533:2003   */\n    tag_12:\n        /* \"#utility.yul\":1599:1605   */\n      0x00\n        /* \"#utility.yul\":1607:1613   */\n      dup1\n        /* \"#utility.yul\":1656:1658   */\n      0x40\n        /* \"#utility.yul\":1644:1653   */\n      dup4\n        /* \"#utility.yul\":1635:1642   */\n      dup6\n        /* \"#utility.yul\":1631:1654   */\n      sub\n        /* \"#utility.yul\":1627:1659   */\n      slt\n        /* \"#utility.yul\":1624:1743   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1662:1741   */\n      tag_79\n      tag_45\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1624:1743   */\n    tag_78:\n        /* \"#utility.yul\":1782:1783   */\n      0x00\n        /* \"#utility.yul\":1807:1860   */\n      tag_80\n        /* \"#utility.yul\":1852:1859   */\n      dup6\n        /* \"#utility.yul\":1843:1849   */\n      dup3\n        /* \"#utility.yul\":1832:1841   */\n      dup7\n        /* \"#utility.yul\":1828:1850   */\n      add\n        /* \"#utility.yul\":1807:1860   */\n      tag_50\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1797:1860   */\n      swap3\n      pop\n        /* \"#utility.yul\":1753:1870   */\n      pop\n        /* \"#utility.yul\":1909:1911   */\n      0x20\n        /* \"#utility.yul\":1935:1986   */\n      tag_81\n        /* \"#utility.yul\":1978:1985   */\n      dup6\n        /* \"#utility.yul\":1969:1975   */\n      dup3\n        /* \"#utility.yul\":1958:1967   */\n      dup7\n        /* \"#utility.yul\":1954:1976   */\n      add\n        /* \"#utility.yul\":1935:1986   */\n      tag_53\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1925:1986   */\n      swap2\n      pop\n        /* \"#utility.yul\":1880:1996   */\n      pop\n        /* \"#utility.yul\":1533:2003   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2009:2121   */\n    tag_54:\n        /* \"#utility.yul\":2092:2114   */\n      tag_83\n        /* \"#utility.yul\":2108:2113   */\n      dup2\n        /* \"#utility.yul\":2092:2114   */\n      tag_51\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2087:2090   */\n      dup3\n        /* \"#utility.yul\":2080:2115   */\n      mstore\n        /* \"#utility.yul\":2009:2121   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2127:2341   */\n    tag_18:\n        /* \"#utility.yul\":2216:2220   */\n      0x00\n        /* \"#utility.yul\":2254:2256   */\n      0x20\n        /* \"#utility.yul\":2243:2252   */\n      dup3\n        /* \"#utility.yul\":2239:2257   */\n      add\n        /* \"#utility.yul\":2231:2257   */\n      swap1\n      pop\n        /* \"#utility.yul\":2267:2334   */\n      tag_85\n        /* \"#utility.yul\":2331:2332   */\n      0x00\n        /* \"#utility.yul\":2320:2329   */\n      dup4\n        /* \"#utility.yul\":2316:2333   */\n      add\n        /* \"#utility.yul\":2307:2313   */\n      dup5\n        /* \"#utility.yul\":2267:2334   */\n      tag_54\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2127:2341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2347:2527   */\n    tag_25:\n        /* \"#utility.yul\":2395:2472   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2392:2393   */\n      0x00\n        /* \"#utility.yul\":2385:2473   */\n      mstore\n        /* \"#utility.yul\":2492:2496   */\n      0x21\n        /* \"#utility.yul\":2489:2490   */\n      0x04\n        /* \"#utility.yul\":2482:2497   */\n      mstore\n        /* \"#utility.yul\":2516:2520   */\n      0x24\n        /* \"#utility.yul\":2513:2514   */\n      0x00\n        /* \"#utility.yul\":2506:2521   */\n      revert\n\n    auxdata: 0xa264697066735822122029a20a826ecaf8dfae3538c48013d9dfd9e157708f3a1e11ac1d472e97763e1064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105ea3803806105ea833981810160405281019061003291906100e8565b60026000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a9050505050610115565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b58261008a565b9050919050565b6100c5816100aa565b81146100d057600080fd5b50565b6000815190506100e2816100bc565b92915050565b6000602082840312156100fe576100fd610085565b5b600061010c848285016100d3565b91505092915050565b6104c6806101246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634762155d14610046578063571c3e6014610062578063a0d7823e1461007e575b600080fd5b610060600480360381019061005b9190610391565b6100ae565b005b61007c600480360381019061007791906103f7565b61012c565b005b61009860048036038101906100939190610391565b610259565b6040516100a59190610446565b60405180910390f35b6100b93360036102ae565b1561012957600060038111156100d2576100d1610461565b5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055505b50565b600160038111156101405761013f610461565b5b60ff168160ff1614156101b8576001600381111561016157610160610461565b5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055505b600260038111156101cc576101cb610461565b5b60ff168160ff161415610255576101e43360036102ae565b1561025457600260038111156101fd576101fc610461565b5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055505b5b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008160038111156102c3576102c2610461565b5b60ff166000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16146103235760009050610328565b600190505b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035e82610333565b9050919050565b61036e81610353565b811461037957600080fd5b50565b60008135905061038b81610365565b92915050565b6000602082840312156103a7576103a661032e565b5b60006103b58482850161037c565b91505092915050565b600060ff82169050919050565b6103d4816103be565b81146103df57600080fd5b50565b6000813590506103f1816103cb565b92915050565b6000806040838503121561040e5761040d61032e565b5b600061041c8582860161037c565b925050602061042d858286016103e2565b9150509250929050565b610440816103be565b82525050565b600060208201905061045b6000830184610437565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122029a20a826ecaf8dfae3538c48013d9dfd9e157708f3a1e11ac1d472e97763e1064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5EA CODESIZE SUB DUP1 PUSH2 0x5EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP POP PUSH2 0x115 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5 DUP3 PUSH2 0x8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC5 DUP2 PUSH2 0xAA JUMP JUMPDEST DUP2 EQ PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE2 DUP2 PUSH2 0xBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE JUMPI PUSH2 0xFD PUSH2 0x85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10C DUP5 DUP3 DUP6 ADD PUSH2 0xD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C6 DUP1 PUSH2 0x124 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4762155D EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x571C3E60 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xA0D7823E EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x391 JUMP JUMPDEST PUSH2 0xAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x391 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 CALLER PUSH1 0x3 PUSH2 0x2AE JUMP JUMPDEST ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD2 JUMPI PUSH2 0xD1 PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x140 JUMPI PUSH2 0x13F PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x161 JUMPI PUSH2 0x160 PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x255 JUMPI PUSH2 0x1E4 CALLER PUSH1 0x3 PUSH2 0x2AE JUMP JUMPDEST ISZERO PUSH2 0x254 JUMPI PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1FD JUMPI PUSH2 0x1FC PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI PUSH2 0x2C2 PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x323 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E DUP3 PUSH2 0x333 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36E DUP2 PUSH2 0x353 JUMP JUMPDEST DUP2 EQ PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38B DUP2 PUSH2 0x365 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A7 JUMPI PUSH2 0x3A6 PUSH2 0x32E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B5 DUP5 DUP3 DUP6 ADD PUSH2 0x37C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D4 DUP2 PUSH2 0x3BE JUMP JUMPDEST DUP2 EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F1 DUP2 PUSH2 0x3CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40E JUMPI PUSH2 0x40D PUSH2 0x32E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41C DUP6 DUP3 DUP7 ADD PUSH2 0x37C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42D DUP6 DUP3 DUP7 ADD PUSH2 0x3E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x440 DUP2 PUSH2 0x3BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x437 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 LOG2 EXP DUP3 PUSH15 0xCAF8DFAE3538C48013D9DFD9E15770 DUP16 GASPRICE 0x1E GT 0xAC SAR SELFBALANCE 0x2E SWAP8 PUSH23 0x3E1064736F6C634300080A003300000000000000000000 ",
							"sourceMap": "94:1578:0:-:0;;;442:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;495:1;479:5;:12;485:5;479:12;;;;;;;;;;;;;;;;;;;;;;;;:17;442:61;94:1578;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;94:1578:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@checkPermission_49": {
									"entryPoint": 686,
									"id": 49,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkRole_142": {
									"entryPoint": 601,
									"id": 142,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeRole_129": {
									"entryPoint": 174,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRole_104": {
									"entryPoint": 300,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint8": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2530:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1219:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1229:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1244:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1251:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1229:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1201:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1211:7:1",
														"type": ""
													}
												],
												"src": "1176:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1309:77:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1364:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1373:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1376:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1366:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1366:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1366:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1355:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "1339:15:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1339:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1329:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1329:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:41:1"
															},
															"nodeType": "YulIf",
															"src": "1319:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1302:5:1",
														"type": ""
													}
												],
												"src": "1268:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1442:85:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1452:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1474:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1461:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1461:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1452:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1515:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "1490:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1490:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1420:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1428:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1436:5:1",
														"type": ""
													}
												],
												"src": "1392:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1614:389:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1660:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1662:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1662:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1635:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1644:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:32:1"
															},
															"nodeType": "YulIf",
															"src": "1624:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1753:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1768:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1782:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1772:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1797:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1832:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1843:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1828:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1828:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1852:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1807:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1797:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1880:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1895:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1909:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1899:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1925:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1958:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1969:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1954:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1954:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1978:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1935:18:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1925:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1576:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1587:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1599:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1607:6:1",
														"type": ""
													}
												],
												"src": "1533:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2070:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2087:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2108:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2092:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2092:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2080:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2058:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2065:3:1",
														"type": ""
													}
												],
												"src": "2009:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2221:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2231:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2243:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2254:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2239:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2231:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2307:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2320:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2331:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2316:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2316:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2267:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2267:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2193:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2205:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2216:4:1",
														"type": ""
													}
												],
												"src": "2127:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2375:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2395:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2385:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2385:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2492:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2482:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2482:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2513:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2516:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2506:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "2347:180:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80634762155d14610046578063571c3e6014610062578063a0d7823e1461007e575b600080fd5b610060600480360381019061005b9190610391565b6100ae565b005b61007c600480360381019061007791906103f7565b61012c565b005b61009860048036038101906100939190610391565b610259565b6040516100a59190610446565b60405180910390f35b6100b93360036102ae565b1561012957600060038111156100d2576100d1610461565b5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055505b50565b600160038111156101405761013f610461565b5b60ff168160ff1614156101b8576001600381111561016157610160610461565b5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055505b600260038111156101cc576101cb610461565b5b60ff168160ff161415610255576101e43360036102ae565b1561025457600260038111156101fd576101fc610461565b5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055505b5b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008160038111156102c3576102c2610461565b5b60ff166000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16146103235760009050610328565b600190505b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035e82610333565b9050919050565b61036e81610353565b811461037957600080fd5b50565b60008135905061038b81610365565b92915050565b6000602082840312156103a7576103a661032e565b5b60006103b58482850161037c565b91505092915050565b600060ff82169050919050565b6103d4816103be565b81146103df57600080fd5b50565b6000813590506103f1816103cb565b92915050565b6000806040838503121561040e5761040d61032e565b5b600061041c8582860161037c565b925050602061042d858286016103e2565b9150509250929050565b610440816103be565b82525050565b600060208201905061045b6000830184610437565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122029a20a826ecaf8dfae3538c48013d9dfd9e157708f3a1e11ac1d472e97763e1064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4762155D EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x571C3E60 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xA0D7823E EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x391 JUMP JUMPDEST PUSH2 0xAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x391 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 CALLER PUSH1 0x3 PUSH2 0x2AE JUMP JUMPDEST ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD2 JUMPI PUSH2 0xD1 PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x140 JUMPI PUSH2 0x13F PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x161 JUMPI PUSH2 0x160 PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x255 JUMPI PUSH2 0x1E4 CALLER PUSH1 0x3 PUSH2 0x2AE JUMP JUMPDEST ISZERO PUSH2 0x254 JUMPI PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1FD JUMPI PUSH2 0x1FC PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI PUSH2 0x2C2 PUSH2 0x461 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x323 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E DUP3 PUSH2 0x333 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36E DUP2 PUSH2 0x353 JUMP JUMPDEST DUP2 EQ PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38B DUP2 PUSH2 0x365 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A7 JUMPI PUSH2 0x3A6 PUSH2 0x32E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B5 DUP5 DUP3 DUP6 ADD PUSH2 0x37C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D4 DUP2 PUSH2 0x3BE JUMP JUMPDEST DUP2 EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F1 DUP2 PUSH2 0x3CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40E JUMPI PUSH2 0x40D PUSH2 0x32E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41C DUP6 DUP3 DUP7 ADD PUSH2 0x37C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42D DUP6 DUP3 DUP7 ADD PUSH2 0x3E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x440 DUP2 PUSH2 0x3BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x437 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 LOG2 EXP DUP3 PUSH15 0xCAF8DFAE3538C48013D9DFD9E15770 DUP16 GASPRICE 0x1E GT 0xAC SAR SELFBALANCE 0x2E SWAP8 PUSH23 0x3E1064736F6C634300080A003300000000000000000000 ",
							"sourceMap": "94:1578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;922:331;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1569:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1337:155;1391:38;1407:10;1418;1391:15;:38::i;:::-;1388:98;;;1462:12;1456:19;;;;;;;;:::i;:::-;;1444:5;:11;1450:4;1444:11;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1388:98;1337:155;:::o;922:331::-;1000:11;994:18;;;;;;;;:::i;:::-;;986:26;;:4;:26;;;982:89;;;1048:11;1042:18;;;;;;;;:::i;:::-;;1028:5;:11;1034:4;1028:11;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;982:89;1098:12;1092:19;;;;;;;;:::i;:::-;;1084:27;;:4;:27;;;1080:167;;;1131:38;1147:10;1158;1131:15;:38::i;:::-;1127:110;;;1209:12;1203:19;;;;;;;;:::i;:::-;;1189:5;:11;1195:4;1189:11;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1127:110;1080:167;922:331;;:::o;1569:96::-;1623:5;1647;:11;1653:4;1647:11;;;;;;;;;;;;;;;;;;;;;;;;;1640:18;;1569:96;;;:::o;614:184::-;686:4;727;721:11;;;;;;;;:::i;:::-;;706:26;;:5;:11;712:4;706:11;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;702:69;;755:5;748:12;;;;702:69;787:4;780:11;;614:184;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:86::-;1211:7;1251:4;1244:5;1240:16;1229:27;;1176:86;;;:::o;1268:118::-;1339:22;1355:5;1339:22;:::i;:::-;1332:5;1329:33;1319:61;;1376:1;1373;1366:12;1319:61;1268:118;:::o;1392:135::-;1436:5;1474:6;1461:20;1452:29;;1490:31;1515:5;1490:31;:::i;:::-;1392:135;;;;:::o;1533:470::-;1599:6;1607;1656:2;1644:9;1635:7;1631:23;1627:32;1624:119;;;1662:79;;:::i;:::-;1624:119;1782:1;1807:53;1852:7;1843:6;1832:9;1828:22;1807:53;:::i;:::-;1797:63;;1753:117;1909:2;1935:51;1978:7;1969:6;1958:9;1954:22;1935:51;:::i;:::-;1925:61;;1880:116;1533:470;;;;;:::o;2009:112::-;2092:22;2108:5;2092:22;:::i;:::-;2087:3;2080:35;2009:112;;:::o;2127:214::-;2216:4;2254:2;2243:9;2239:18;2231:26;;2267:67;2331:1;2320:9;2316:17;2307:6;2267:67;:::i;:::-;2127:214;;;;:::o;2347:180::-;2395:77;2392:1;2385:88;2492:4;2489:1;2482:15;2516:4;2513:1;2506:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "244400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"checkRole(address)": "2905",
								"removeRole(address)": "2798",
								"setRole(address,uint8)": "27510"
							},
							"internal": {
								"checkPermission(address,enum VerifierContract.Role)": "2334"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 94,
									"end": 1672,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 503,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 442,
									"end": 503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 442,
									"end": 503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 442,
									"end": 503,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 442,
									"end": 503,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 442,
									"end": 503,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 442,
									"end": 503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 495,
									"end": 496,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 479,
									"end": 484,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 485,
									"end": 490,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 479,
									"end": 491,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 479,
									"end": 491,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 479,
									"end": 491,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 479,
									"end": 491,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 491,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 491,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 479,
									"end": 491,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 479,
									"end": 491,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 479,
									"end": 496,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 442,
									"end": 503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 94,
									"end": 1672,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122029a20a826ecaf8dfae3538c48013d9dfd9e157708f3a1e11ac1d472e97763e1064736f6c634300080a0033",
									".code": [
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "4762155D"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "571C3E60"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "A0D7823E"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 94,
											"end": 1672,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1417,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1428,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1391,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1391,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1391,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1486,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1388,
											"end": 1486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1456,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1486,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1388,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1492,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 994,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 986,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 986,
											"end": 1012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 986,
											"end": 990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 986,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 986,
											"end": 1012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 986,
											"end": 1012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 982,
											"end": 1071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 982,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1110,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1092,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1084,
											"end": 1111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1084,
											"end": 1111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1111,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1080,
											"end": 1247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1147,
											"end": 1157,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1168,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1131,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1131,
											"end": 1169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1131,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1127,
											"end": 1237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1199,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1127,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1247,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1080,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1253,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1647,
											"end": 1658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 614,
											"end": 798,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 614,
											"end": 798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 686,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 732,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 721,
											"end": 732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 706,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 706,
											"end": 732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 706,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 712,
											"end": 716,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 706,
											"end": 717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 706,
											"end": 717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 717,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 706,
											"end": 717,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 706,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 706,
											"end": 717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 706,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 706,
											"end": 732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 706,
											"end": 732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 702,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 702,
											"end": 771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 755,
											"end": 760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 771,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 702,
											"end": 771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 780,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 614,
											"end": 798,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 798,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 614,
											"end": 798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 614,
											"end": 798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 614,
											"end": 798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 614,
											"end": 798,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1256,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1262,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1386,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1268,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1355,
											"end": 1360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1362,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1319,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1319,
											"end": 1380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1319,
											"end": 1380,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1319,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1386,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1392,
											"end": 1527,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1392,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1481,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1490,
											"end": 1521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1521,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1490,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1527,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1533,
											"end": 2003,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1533,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1624,
											"end": 1743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1662,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1662,
											"end": 1741,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1741,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1662,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1743,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1624,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1807,
											"end": 1860,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1807,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1807,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1860,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1935,
											"end": 1986,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1935,
											"end": 1986,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1935,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 2003,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 2003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 2003,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 2003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 2003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 2003,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2009,
											"end": 2121,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2009,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2127,
											"end": 2341,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2127,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2331,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2341,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2341,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2347,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2347,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2472,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2489,
											"end": 2490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2482,
											"end": 2497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2521,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"checkRole(address)": "a0d7823e",
							"removeRole(address)": "4762155d",
							"setRole(address,uint8)": "571c3e60"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"checkRole\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"setRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkRole(address)\":{\"params\":{\"addr\":\"\\u67e5\\u770b\\u6743\\u9650\\u7684\\u5730\\u5740*\"}},\"removeRole(address)\":{\"params\":{\"addr\":\"\\u88ab\\u5220\\u9664\\u6743\\u9650\\u8005\\u7684\\u5730\\u5740*\"}},\"setRole(address,uint8)\":{\"params\":{\"addr\":\"\\u88ab\\u8d4b\\u4e88\\u6743\\u9650\\u8005\\u7684\\u5730\\u5740\",\"role\":\"\\u88ab\\u8d4b\\u4e88\\u7684\\u6743\\u9650\\u7b49\\u7ea7*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkRole(address)\":{\"notice\":\"\\u67e5\\u770b\\u6743\\u9650\"},\"removeRole(address)\":{\"notice\":\"\\u5220\\u9664\\u6743\\u9650\"},\"setRole(address,uint8)\":{\"notice\":\"\\u8bbe\\u7f6e\\u6743\\u9650\"}},\"notice\":\"\\u6743\\u9650\\u63a7\\u5236\\u5408\\u7ea6*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Data Transmisson To BlockChain Frame/VerifierContract.sol\":\"VerifierContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Data Transmisson To BlockChain Frame/VerifierContract.sol\":{\"keccak256\":\"0x024d3257f1dda6c03f54ff89684122f772e4c7780517615b9aa265ec6e2a3262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0a0903a114e4bc422d93cef58cca9333c4cee9b58a269cdfcd2fd3d3af1321f\",\"dweb:/ipfs/QmdMecBLjEiqsbNkXYpNE3tXP8mCNjnBPyXwzeYZoT7TRk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "Data Transmisson To BlockChain Frame/VerifierContract.sol:VerifierContract",
								"label": "users",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint8)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint8)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint8)",
								"numberOfBytes": "32",
								"value": "t_uint8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkRole(address)": {
								"notice": "查看权限"
							},
							"removeRole(address)": {
								"notice": "删除权限"
							},
							"setRole(address,uint8)": {
								"notice": "设置权限"
							}
						},
						"notice": "权限控制合约*",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Data Transmisson To BlockChain Frame/VerifierContract.sol": {
				"ast": {
					"absolutePath": "Data Transmisson To BlockChain Frame/VerifierContract.sol",
					"exportedSymbols": {
						"VerifierContract": [
							143
						]
					},
					"id": 144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".10",
								"<",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VerifierContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "67:26:0",
								"text": "权限控制合约*"
							},
							"fullyImplemented": true,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "VerifierContract",
							"nameLocation": "103:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "VerifierContract.Role",
									"id": 7,
									"members": [
										{
											"id": 3,
											"name": "Default",
											"nameLocation": "288:7:0",
											"nodeType": "EnumValue",
											"src": "288:7:0"
										},
										{
											"id": 4,
											"name": "Common",
											"nameLocation": "305:6:0",
											"nodeType": "EnumValue",
											"src": "305:6:0"
										},
										{
											"id": 5,
											"name": "Chainer",
											"nameLocation": "321:7:0",
											"nodeType": "EnumValue",
											"src": "321:7:0"
										},
										{
											"id": 6,
											"name": "Admin",
											"nameLocation": "338:5:0",
											"nodeType": "EnumValue",
											"src": "338:5:0"
										}
									],
									"name": "Role",
									"nameLocation": "273:4:0",
									"nodeType": "EnumDefinition",
									"src": "268:81:0"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "408:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 143,
									"src": "374:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
										"typeString": "mapping(address => uint8)"
									},
									"typeName": {
										"id": 10,
										"keyType": {
											"id": 8,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "382:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "374:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
											"typeString": "mapping(address => uint8)"
										},
										"valueType": {
											"id": 9,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "393:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "469:34:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 16,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "479:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																"typeString": "mapping(address => uint8)"
															}
														},
														"id": 18,
														"indexExpression": {
															"id": 17,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "485:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "479:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "495:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "479:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "479:17:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "462:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "454:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:15:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:0:0"
									},
									"scope": 143,
									"src": "442:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "692:106:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 34,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "706:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																"typeString": "mapping(address => uint8)"
															}
														},
														"id": 36,
														"indexExpression": {
															"id": 35,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "712:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "706:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 39,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "727:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$7",
																	"typeString": "enum VerifierContract.Role"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Role_$7",
																	"typeString": "enum VerifierContract.Role"
																}
															],
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "721:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 37,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "721:5:0",
																"typeDescriptions": {}
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "721:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "706:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 45,
												"nodeType": "IfStatement",
												"src": "702:69:0",
												"trueBody": {
													"id": 44,
													"nodeType": "Block",
													"src": "734:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "755:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 33,
															"id": 43,
															"nodeType": "Return",
															"src": "748:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "787:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 33,
												"id": 47,
												"nodeType": "Return",
												"src": "780:11:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "509:100:0",
										"text": "@param addr 视图赋予权限者的地址\n@param role 赋予的权限等级*"
									},
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPermission",
									"nameLocation": "623:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "647:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "639:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "657:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "652:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$7",
													"typeString": "enum VerifierContract.Role"
												},
												"typeName": {
													"id": 28,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 27,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "652:4:0"
													},
													"referencedDeclaration": 7,
													"src": "652:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Role_$7",
														"typeString": "enum VerifierContract.Role"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:24:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "686:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "686:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:6:0"
									},
									"scope": 143,
									"src": "614:184:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "972:281:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 57,
														"name": "role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "986:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 60,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "1000:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																		"typeString": "type(enum VerifierContract.Role)"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Common",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1000:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$7",
																	"typeString": "enum VerifierContract.Role"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Role_$7",
																	"typeString": "enum VerifierContract.Role"
																}
															],
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "994:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 58,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "994:5:0",
																"typeDescriptions": {}
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "994:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "986:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "982:89:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "1014:57:0",
													"statements": [
														{
															"expression": {
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 64,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "1028:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																			"typeString": "mapping(address => uint8)"
																		}
																	},
																	"id": 66,
																	"indexExpression": {
																		"id": 65,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "1034:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1028:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 69,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 7,
																				"src": "1048:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																					"typeString": "type(enum VerifierContract.Role)"
																				}
																			},
																			"id": 70,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "Common",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4,
																			"src": "1048:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$7",
																				"typeString": "enum VerifierContract.Role"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Role_$7",
																				"typeString": "enum VerifierContract.Role"
																			}
																		],
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1042:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 67,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "1042:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1042:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1028:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "1028:32:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1084:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 79,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "1098:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																		"typeString": "type(enum VerifierContract.Role)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Chainer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1098:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$7",
																	"typeString": "enum VerifierContract.Role"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Role_$7",
																	"typeString": "enum VerifierContract.Role"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1092:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 77,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1092:5:0",
																"typeDescriptions": {}
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1092:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1084:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 102,
												"nodeType": "IfStatement",
												"src": "1080:167:0",
												"trueBody": {
													"id": 101,
													"nodeType": "Block",
													"src": "1113:134:0",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"expression": {
																			"id": 84,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1147:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1147:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 86,
																			"name": "Role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "1158:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																				"typeString": "type(enum VerifierContract.Role)"
																			}
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "Admin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6,
																		"src": "1158:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$7",
																			"typeString": "enum VerifierContract.Role"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_enum$_Role_$7",
																			"typeString": "enum VerifierContract.Role"
																		}
																	],
																	"id": 83,
																	"name": "checkPermission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1131:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_Role_$7_$returns$_t_bool_$",
																		"typeString": "function (address,enum VerifierContract.Role) view returns (bool)"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1131:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 100,
															"nodeType": "IfStatement",
															"src": "1127:110:0",
															"trueBody": {
																"id": 99,
																"nodeType": "Block",
																"src": "1171:66:0",
																"statements": [
																	{
																		"expression": {
																			"id": 97,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 89,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 11,
																					"src": "1189:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																						"typeString": "mapping(address => uint8)"
																					}
																				},
																				"id": 91,
																				"indexExpression": {
																					"id": 90,
																					"name": "addr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 52,
																					"src": "1195:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1189:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 94,
																							"name": "Role",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 7,
																							"src": "1209:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																								"typeString": "type(enum VerifierContract.Role)"
																							}
																						},
																						"id": 95,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "Chainer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 5,
																						"src": "1209:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Role_$7",
																							"typeString": "enum VerifierContract.Role"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Role_$7",
																							"typeString": "enum VerifierContract.Role"
																						}
																					],
																					"id": 93,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1203:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 92,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "1203:5:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 96,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1203:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1189:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 98,
																		"nodeType": "ExpressionStatement",
																		"src": "1189:33:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "804:113:0",
										"text": "设置权限\n@param addr 被赋予权限者的地址\n@param role 被赋予的权限等级*"
									},
									"functionSelector": "571c3e60",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRole",
									"nameLocation": "931:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "947:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "939:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "959:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "953:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 53,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "953:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:26:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:0:0"
									},
									"scope": 143,
									"src": "922:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1378:114:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"expression": {
																"id": 111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1407:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1407:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 113,
																"name": "Role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1418:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																	"typeString": "type(enum VerifierContract.Role)"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Admin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "1418:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Role_$7",
																"typeString": "enum VerifierContract.Role"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_Role_$7",
																"typeString": "enum VerifierContract.Role"
															}
														],
														"id": 110,
														"name": "checkPermission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1391:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_Role_$7_$returns$_t_bool_$",
															"typeString": "function (address,enum VerifierContract.Role) view returns (bool)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 127,
												"nodeType": "IfStatement",
												"src": "1388:98:0",
												"trueBody": {
													"id": 126,
													"nodeType": "Block",
													"src": "1430:56:0",
													"statements": [
														{
															"expression": {
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 116,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "1444:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																			"typeString": "mapping(address => uint8)"
																		}
																	},
																	"id": 118,
																	"indexExpression": {
																		"id": 117,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "1450:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1444:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 121,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 7,
																				"src": "1462:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$7_$",
																					"typeString": "type(enum VerifierContract.Role)"
																				}
																			},
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "Default",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3,
																			"src": "1462:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$7",
																				"typeString": "enum VerifierContract.Role"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Role_$7",
																				"typeString": "enum VerifierContract.Role"
																			}
																		],
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1456:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 119,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "1456:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1456:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1444:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 125,
															"nodeType": "ExpressionStatement",
															"src": "1444:31:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1263:69:0",
										"text": "删除权限\n@param addr 被删除权限者的地址*"
									},
									"functionSelector": "4762155d",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeRole",
									"nameLocation": "1346:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1365:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1357:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1356:14:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1378:0:0"
									},
									"scope": 143,
									"src": "1337:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1630:35:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 137,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1647:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
															"typeString": "mapping(address => uint8)"
														}
													},
													"id": 139,
													"indexExpression": {
														"id": 138,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1653:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1647:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 136,
												"id": 140,
												"nodeType": "Return",
												"src": "1640:18:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "1502:62:0",
										"text": "查看权限\n@param addr 查看权限的地址*"
									},
									"functionSelector": "a0d7823e",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkRole",
									"nameLocation": "1578:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1596:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1588:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:14:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1623:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 134,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:7:0"
									},
									"scope": 143,
									"src": "1569:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 144,
							"src": "94:1578:0",
							"usedErrors": []
						}
					],
					"src": "32:1641:0"
				},
				"id": 0
			}
		}
	}
}